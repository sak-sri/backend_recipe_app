{"version":3,"sources":["App.module.css","Recipe.js","DropDown.js","App.js","reportWebVitals.js","index.js","DropDown.module.css"],"names":["module","exports","Recipe","props","className","classes","item","style","textAlign","title","src","url","alt","borderRadius","width","margin","maxHeight","marginTop","color","cal","toFixed","ingredients","map","ingredient","text","DropDown","useState","visibilityHealthLabels","setVisibilityHealthLabels","opacityDropDown","setOpacityDropDown","pointer","setPointer","healthLabels","x","value","container","header","onClick","opacity","padding","listStyle","flexDirection","backgroundColor","pointerEvents","listform","display","alignItems","height","overflowY","type","name","HealthOptions","App","checked","recipes","setRecipes","search","setSearch","query","setQuery","healthOptions","sethealthOptions","healthParameters","setHealthParameters","status","setStatus","useEffect","mounted","length","getRecipes","a","data","JSON","stringify","q","health","axios","post","headers","response","hits","Helmet","flexFlow","event","forEach","option","target","temp","i","push","undefined","onSubmit","preventDefault","Input","onChange","Button","index","recipe","label","image","calories","id","data-color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738c8e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"App_Input__3B7jX\",\"Button\":\"App_Button__cBREv\",\"App\":\"App_App__6scZG\",\"Recipe\":\"App_Recipe__2jaia\",\"item\":\"App_item__ZOrEb\"};","import React from 'react'\r\nimport classes from './App.module.css'\r\nconst Recipe=(props)=>{\r\n    return(\r\n        <div className={classes.item}>\r\n            <h3 style={{textAlign:'center'}}>{props.title}</h3>\r\n            <img src={props.url} alt=\"not available\" style={{borderRadius:'10px',width:'100%',margin:'auto',maxHeight:'35%'}}></img>\r\n            <h4 style={{marginTop:'10px',textAlign:'center',color:'black'}}>calories:{props.cal.toFixed(2)}</h4>\r\n            <h4 style={{color:\"black\",textAlign:\"center\"}}>Ingredients</h4>\r\n            <ul>\r\n                {props.ingredients.map(ingredient=>{return(<li>{ingredient.text}</li>)})}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Recipe;","import React,{useState} from 'react'\r\nimport classes from './DropDown.module.css'\r\nconst DropDown=(props)=>{\r\n    const [visibilityHealthLabels,setVisibilityHealthLabels]=useState(\"none\");\r\n    const [opacityDropDown,setOpacityDropDown]=useState('0');\r\n    const [pointer,setPointer]=useState('none');\r\n  \r\n   \r\n    let healthLabels=props.healthLabels.map(x=>x.value);\r\n    return(\r\n           <div className={classes.container}>\r\n            <button className={classes.header} onClick={\r\n                    ()=>{\r\n                        if(opacityDropDown==='1')\r\n                        {\r\n                            setOpacityDropDown('0');\r\n                            setPointer('none');\r\n                        }\r\n                        else\r\n                        {\r\n                            setOpacityDropDown('1');\r\n                            setPointer('all');\r\n                        }\r\n                    }\r\n                }>Filters</button>\r\n                <ul \r\n                style={{opacity:opacityDropDown,marginTop: '10%',\r\n                padding:'0px',\r\n                listStyle: 'none',\r\n                flexDirection: 'column',\r\n                width: '100%',\r\n                backgroundColor:'white',\r\n                borderRadius: '5px',\r\n                pointerEvents:pointer   \r\n                }}\r\n                >\r\n                    <li onClick={()=>{\r\n                        if(visibilityHealthLabels===\"none\" && opacityDropDown===\"1\")\r\n                        {\r\n                            setVisibilityHealthLabels(\"flex\");\r\n                        }\r\n                        else\r\n                        {\r\n                            setVisibilityHealthLabels(\"none\");\r\n                        }\r\n                    }}>\r\n                        Health Labels\r\n                    </li>\r\n                    <form className={classes.listform} style={{display:visibilityHealthLabels,\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',height:'120px',overflowY:'scroll'}} >\r\n                           {healthLabels.map((item)=>{\r\n                               return(\r\n                                   <div>\r\n                                   <input type=\"checkbox\" name={item} value={item} onClick={props.HealthOptions}/>\r\n                                   <label>{item}</label>\r\n                                   </div>\r\n                               )    \r\n                           })}\r\n                        </form>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default DropDown;","import classes from './App.module.css';\nimport { useEffect,useState } from 'react';\nimport Recipe from './Recipe'\nimport DropDown from './DropDown'\nimport axios from 'axios'\nimport {Helmet} from 'react-helmet'\nfunction App(){\n  let healthLabels=[\n    {value:'vegan',\n    checked:false},\n    {value:'alcohol-free',\n    checked:false},\n    {value:'vegetarian',\n    checked:false},\n  {\n    value:'balanced',\n    checked:false},\n    {\n    value:'high-fiber',\n    checked:false},\n    {\n    value:'high protein',\n    checked:false},\n    {\n    value:'low-carb',\n    checked:false},\n    {\n    value:'low-fat',\n    checked:false},\n    {\n    value:'peanut-free',\n    checked:false},\n   {value: 'sugar-conscious',\n   checked:false},\n    {value:'tree-nut-free',\n    checked:false}];\n  const [recipes,setRecipes]=useState([]);\n  const [search,setSearch]=useState('');\n  const [query,setQuery]=useState('');\n  const [healthOptions,sethealthOptions]=useState(healthLabels);\n  const [healthParameters,setHealthParameters]=useState([]);\n  const [status,setStatus]=useState('ok')\n  useEffect(()=>{\n    let mounted=true;\n    if((query!=='' || healthParameters.length) && mounted)\n        getRecipes()\n     mounted=false;\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[query,healthParameters]\n  );\n  const getRecipes=async ()=>{\n   let data=JSON.stringify({\n    q:query,\n    health:healthParameters\n   })\n   let response=await axios.post('https://recipe---app.herokuapp.com/',data,{headers:{\"Content-Type\" : \"application/json\"}}\n    )\n   let hits=await response.data.hits;\n   if(typeof hits==='undefined'){\n      setStatus('notok')\n   }\n   else{\n      setStatus('ok')\n   }\n   setRecipes(hits);\n\n};\n  const collectHealthOptions=(event)=>{\n    healthLabels=[...healthOptions];\n      healthLabels.forEach((option)=>{\n        if(event.target.value===option.value)\n        {\n            option.checked=!option.checked;\n        }\n      });\n      let temp=[];\n      for(let i=0;i<healthLabels.length;i++)\n      {\n        if(healthLabels[i].checked)\n        {\n           temp.push(healthLabels[i].value);\n        }\n        else\n        {\n          temp.push(undefined);\n        }\n      }\n      setHealthParameters(temp);\n      sethealthOptions(healthLabels);\n  };\n  return (\n    <div className={classes.App}>\n      <Helmet>\n        <script src=\"https://developer.edamam.com/attribution/badge.js\"></script>\n      </Helmet>\n      <div style={{display:'flex',flexFlow:\"row\"}}>\n      <DropDown healthLabels={healthOptions} HealthOptions={collectHealthOptions}\n      />\n      <form onSubmit={(event)=>{\n          event.preventDefault();\n          setQuery(search);\n        }} style={{margin:'auto',marginTop:'0px'}}>\n        <div>\n        <input type=\"text\" className={classes.Input} value={search} onChange={(event)=>{\n          setSearch(event.target.value)\n        }}></input>\n        </div>\n        <div>\n        <button type=\"submit\" className={classes.Button}>submit</button>\n        </div>\n      </form>\n      </div>\n      <div className={classes.Recipe}>\n      {\n     status===\"ok\"?recipes.map((item,index)=>{return (<Recipe key={index} \n     title={item.recipe.label} \n     url={item.recipe.image} \n     cal={item.recipe.calories}\n     ingredients={item.recipe.ingredients}\n     />)}):<div style={{margin:'auto',width:'fit-content'}}>Sorry! No Results Matched Your Search</div>\n          }     </div>\n      <div id=\"edamam-badge\" data-color=\"white\" style={{marginTop:\"100%\"}}></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropDown_container__2zDLJ\",\"header\":\"DropDown_header__3dwpF\"};"],"sourceRoot":""}